{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Beginning Electronics for Kids","text":"<p>Welcome to the Beginning Electronics for Kids website.  This site is full of resources to make learning electronics fun!</p> <p>To get started, all you need is a $20 kit of electronic parts and this guide.  We work with generative AI tools to build custom lesson plans based on the age of your students, the parts you have and your learning objectives.</p> <p>Note</p> <p>If you don't have access to these parts, we also have several \"Micro Simulators\" or MicroSims to guide you on your way.</p> <p>These simulators were also partially created by generative AI tools. See the MicroSims website for examples of these program.</p>"},{"location":"#how-does-it-work","title":"How does it work?","text":"<p>We guide to in the process of building lesson plans that are customized to your learning task.  Your prompt might include the following:</p> <ol> <li>Your age or grade in school.</li> <li>What you want to learn.</li> <li>Any lessons you have already finished.</li> <li>Any parts you have on hand.</li> <li>How much time you have available.</li> </ol> <p>Our system will then generate a lesson plan and a circuit diagram of what you want to learn.</p>"},{"location":"#how-to-use-this-website","title":"How to use this website","text":"<p>You can use the left navigation bar to see how to get started and lesson plans.  There is also a search function in the upper right corner.</p> <p>Lastly, we have lots of suggestions on how to go further in your learning with suggested resources on building LED strips, costumes, robots and how to learn more about AI.</p> <p>Have fun!</p> <p>Dan McCreary - Lead Content Author</p>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"lessons/","title":"Beginning Electronics Lessons","text":""},{"location":"lessons/80-rc-circuit/","title":"RC Circuit","text":""},{"location":"lessons/80-rc-circuit/#rc-circuit","title":"RC Circuit","text":""},{"location":"lessons/80-rc-circuit/#reasonable-values-for-rc-circuit-lab","title":"Reasonable Values for RC Circuit Lab","text":"<p>For an RC circuit lab, especially at the 9th-grade level, you'll want to choose resistor and capacitor values that allow for observable charge and discharge times without being too fast or too slow. Here's a set of reasonable starting values:</p>"},{"location":"lessons/80-rc-circuit/#resistor-values","title":"Resistor Values:","text":"<ul> <li>330\u03a9 - Low enough to see the LED light up brightly, but high enough to protect the LED.</li> <li>1k\u03a9 - A moderate value that will slow down the charging and discharging process a bit more.</li> <li>10k\u03a9 - High enough to significantly slow the process, making it easier to observe with a stopwatch.</li> </ul>"},{"location":"lessons/80-rc-circuit/#capacitor-values","title":"Capacitor Values:","text":"<ul> <li>47\u00b5F - Small enough for relatively quick charging and discharging, which could take a few seconds.</li> <li>100\u00b5F - A middle-ground value that will take longer to charge and discharge, likely on the order of 10s of seconds.</li> <li>1000\u00b5F (1mF) - Large enough to have a very observable charge and discharge time, potentially taking minutes.</li> </ul> <p>The exact times for charging and discharging will depend on the specifics of the circuit, the power supply voltage, and the initial charge state of the capacitor. Using these values, students can start with the smaller capacitance and lower resistance, observing the quick charge/discharge cycles. As they move to larger capacitance and higher resistance values, they'll notice longer cycles.</p> <p>For a standard experiment, combining a 100\u00b5F capacitor with a 1k\u03a9 resistor is a common starting point because it provides a middle ground with easily observable results without being too quick or too long.</p> <p>It's also helpful to teach students about the time constant of an RC circuit, which is \u03c4 (tau) = R*C. The time constant represents the time it takes for the capacitor to charge to about 63% of the supply voltage or discharge to about 37% of its initial voltage. With the values provided, students can calculate the time constant and compare it to their experimental results, which can be a very enlightening exercise.</p>"},{"location":"setup/breadboard-kits/","title":"Breadboard Kits","text":"<p>Target Price: $15</p> <p>$11 for 4 or more kits</p> <p></p> <p>eBay Listing</p>"},{"location":"setup/breadboard-kits/#components","title":"Components","text":"<p>Starter Beginner DIY Electronics Basic Kit 830 Holes Breadboard Resistors Buzzer $20</p>"},{"location":"setup/generating-lessons/","title":"Generating Basic Electronics Lessons","text":"<p>We use ChatGPT from OpenAI to generate our lesson plans. We have many samples you can use, but this is just the start of your adventure!  By using generative AI you can customize your projects to do exactly what you will need to do.</p>"},{"location":"setup/generating-lessons/#creating-a-prompt","title":"Creating A Prompt","text":"<p>The key to getting a good lesson out of tools like ChatGPT is to be very specific about what you want to learn, what your background is, and what parts you have in your kit. By putting these facts together into a prompt we can help you learn precisely what you want to learn.</p> <ol> <li>Your age or grade in school.</li> <li>What you want to learn.</li> <li>Any lessons you have already finished.</li> <li>Any parts you have on hand.</li> <li>How much time you have available.</li> </ol>"},{"location":"setup/generating-lessons/#example-prompt","title":"Example Prompt","text":"<pre><code>I am a 5th grade student.\nI want to learn how to make an LED go on if I press a button.\nI have a battery, a breadboard, LEDs, resistors and jumper wires.\nI know how breadboards work.\nI have 45 minutes to learn this task.\n</code></pre>"},{"location":"setup/generating-lessons/#sample-response","title":"Sample Response","text":"<p>That's a great project to work on, and it's fantastic that you're interested in learning electronics! To create a circuit where an LED lights up when you press a button, you'll need to understand how to connect these components correctly. Here's a step-by-step guide for you:</p>"},{"location":"setup/generating-lessons/#materials-needed","title":"Materials Needed","text":"<ol> <li>Breadboard</li> <li>LEDs</li> <li>Resistors (220 ohm or similar)</li> <li>Push button</li> <li>Jumper wires</li> <li>Battery (and battery connector if necessary)</li> </ol>"},{"location":"setup/generating-lessons/#steps-to-build-the-circuit","title":"Steps to Build the Circuit","text":"<ol> <li> <p>Understanding the Breadboard: Since you know how breadboards work, remember that the rows are connected horizontally and the two sides are usually not connected to each other.</p> </li> <li> <p>Place the LED: Insert the LED into the breadboard. LEDs have a longer leg (anode) and a shorter leg (cathode). The longer leg should be connected towards the positive side of your circuit.</p> </li> <li> <p>Add a Resistor: Connect a resistor to the anode (longer leg) of the LED. This is important to prevent the LED from burning out due to too much current.</p> </li> <li> <p>Insert the Push Button: Place the push button somewhere on the breadboard. Push buttons usually have four legs. When pressed, they connect the legs on one side to the legs on the other.</p> </li> <li> <p>Connect the Battery: Attach one end of a jumper wire to the positive terminal of the battery. Connect the other end of this wire to one of the legs of the resistor.</p> </li> <li> <p>Complete the Circuit: Use another jumper wire to connect the cathode (shorter leg) of the LED to one side of the push button. Then, use another wire to connect the other side of the button to the negative terminal of the battery.</p> </li> <li> <p>Test Your Circuit: When everything is connected, press the button. Your LED should light up!</p> </li> </ol>"},{"location":"setup/generating-lessons/#tips","title":"Tips","text":"<ul> <li>Be careful with the polarity of the LED and battery. Connecting them the wrong way can damage the components.</li> <li>If the LED does not light up, check all connections and make sure the button is working correctly.</li> <li>You can experiment with different resistor values to see how they affect the brightness of the LED.</li> </ul>"},{"location":"setup/generating-lessons/#safety-first","title":"Safety First","text":"<ul> <li>Always make sure your battery is disconnected when building or modifying your circuit.</li> <li>Double-check all connections before turning on the power.</li> </ul> <p>With these instructions and your materials, you should be able to set up the circuit within your 45-minute timeframe. Happy building, and enjoy your electronics journey!</p>"},{"location":"sims/breadboard/","title":"Breadboard Layout","text":"<p>1/2 Size Breadboard Layout - note that the power rails, main section and labels are all rendered using vector graphics drawing</p> <p>Resistors, Buttons and LEDs on Breadboard</p>"},{"location":"sims/led/","title":"Draw LEDs","text":"<pre><code>// 5mm LED top view\nfunction drawLED(x, y, w, h, color, state) {\n// wire\nstroke('black');\nstrokeWeight(5);\nline(x, y, x+w, y+h);\n// LED\nif (state)\nfill(color);\nelse fill('black');\nstrokeWeight(1);\ncircle(x+(w/2), y+(h/2),20);\n}\n</code></pre>"},{"location":"sims/push-buttons/","title":"Push Buttons","text":"<p>Draw Push Buttons on a Breadboard</p>"},{"location":"sims/push-buttons/#draw-push-button-no-state","title":"Draw Push Button (No State)","text":"<pre><code>function drawPushButton(x, y, size, color) {\n// 12mm X 12mm button on breadboard with a width of 404\nbc = size / 2 // button center\n\n// Button style - use a rect with rounded corners\nfill('darkgray');\nnoStroke();\nrect(x, y, size, size, 5);\n\n// Draw the circle red if we have a press in our circle\nif (dist(mouseX, mouseY, x+bc, y+bc) &lt; bc &amp;&amp; mouseIsPressed)\nfill('lightgray');\nelse\nfill(color);\n\n// Draw the circle\ncircle(x+bc, y+bc, size);\n\nif (dist(mouseX, mouseY, x+bc, y+bc) &lt; bc &amp;&amp; mouseIsPressed)\nreturn 1;\nelse\nreturn 0;\n}\n</code></pre> <p>Here we place them at the center of our breadboard and return the state of each pressed button.  We can then pass this state to other parts on the breadboard that are connected to the push button.</p> <pre><code>    rs = drawPushButton(123, 109, 48, 'red');\n    gs = drawPushButton(189, 109, 48, 'green');\n    bs = drawPushButton(251, 109, 48, 'blue');\n</code></pre>"},{"location":"sims/resistors/","title":"Drawing Resistors in a MicroSim","text":"<p>Draw Resistors Library note these are done for both horizontal and vertical</p> <p>Draw Resistor Symbol</p>"},{"location":"sims/timer/","title":"555 Timer","text":"<p>555 Timer Simulator</p>"}]}